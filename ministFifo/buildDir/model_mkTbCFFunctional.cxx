/*
 * Generated by Bluespec Compiler (build 14ff62d)
 * 
 * On Thu Jun 15 20:47:38 PDT 2023
 * 
 */
#include "bluesim_primitives.h"
#include "model_mkTbCFFunctional.h"

#include <cstdlib>
#include <time.h>
#include "bluesim_kernel_api.h"
#include "bs_vcd.h"
#include "bs_reset.h"


/* Constructor */
MODEL_mkTbCFFunctional::MODEL_mkTbCFFunctional()
{
  mkTbCFFunctional_instance = NULL;
}

/* Function for creating a new model */
void * new_MODEL_mkTbCFFunctional()
{
  MODEL_mkTbCFFunctional *model = new MODEL_mkTbCFFunctional();
  return (void *)(model);
}

/* Schedule functions */

static void schedule_posedge_CLK(tSimStateHdl simHdl, void *instance_ptr)
       {
	 MOD_mkTbCFFunctional &INST_top = *((MOD_mkTbCFFunctional *)(instance_ptr));
	 tUInt8 DEF_INST_top_DEF_m_randomA_initialized__h3833;
	 tUInt8 DEF_INST_top_DEF_m_randomB_initialized__h4222;
	 tUInt8 DEF_INST_top_DEF_m_randomC_initialized__h4609;
	 tUInt8 DEF_INST_top_DEF_m_randomData_initialized__h4999;
	 tUInt8 DEF_INST_top_DEF_NOT_fifo_empty_5_3_AND_m_ref_fifo_i_notEmpty__12___d113;
	 INST_top.DEF_CAN_FIRE_RL_fifo_canonicalize = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_fifo_canonicalize = INST_top.DEF_CAN_FIRE_RL_fifo_canonicalize;
	 INST_top.DEF_CAN_FIRE_RL_fifo_deqReq_canonicalize = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_fifo_deqReq_canonicalize = INST_top.DEF_CAN_FIRE_RL_fifo_deqReq_canonicalize;
	 INST_top.DEF_CAN_FIRE_RL_fifo_enqReq_canonicalize = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_fifo_enqReq_canonicalize = INST_top.DEF_CAN_FIRE_RL_fifo_enqReq_canonicalize;
	 INST_top.DEF_fifo_empty__h3110 = INST_top.INST_fifo_empty.METH_read();
	 INST_top.DEF_NOT_fifo_empty_5___d63 = !(INST_top.DEF_fifo_empty__h3110);
	 DEF_INST_top_DEF_NOT_fifo_empty_5_3_AND_m_ref_fifo_i_notEmpty__12___d113 = INST_top.DEF_NOT_fifo_empty_5___d63 && INST_top.INST_m_ref_fifo.METH_i_notEmpty();
	 INST_top.DEF_CAN_FIRE_RL_m_check_fifos_first = DEF_INST_top_DEF_NOT_fifo_empty_5_3_AND_m_ref_fifo_i_notEmpty__12___d113;
	 INST_top.DEF_WILL_FIRE_RL_m_check_fifos_first = INST_top.DEF_CAN_FIRE_RL_m_check_fifos_first;
	 INST_top.DEF_CAN_FIRE_RL_m_check_fifos_not_empty = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_m_check_fifos_not_empty = INST_top.DEF_CAN_FIRE_RL_m_check_fifos_not_empty;
	 INST_top.DEF_CAN_FIRE_RL_m_check_fifos_not_full = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_m_check_fifos_not_full = INST_top.DEF_CAN_FIRE_RL_m_check_fifos_not_full;
	 INST_top.DEF_x__h6218 = INST_top.INST_m_cycle.METH_read();
	 INST_top.DEF_CAN_FIRE_RL_m_init = (INST_top.DEF_x__h6218) == 0u;
	 INST_top.DEF_WILL_FIRE_RL_m_init = INST_top.DEF_CAN_FIRE_RL_m_init;
	 INST_top.DEF_CAN_FIRE_RL_m_cycle_inc = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_m_cycle_inc = INST_top.DEF_CAN_FIRE_RL_m_cycle_inc;
	 INST_top.DEF_CAN_FIRE_RL_m_randomA_every = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_m_randomA_every = INST_top.DEF_CAN_FIRE_RL_m_randomA_every;
	 DEF_INST_top_DEF_m_randomA_initialized__h3833 = INST_top.INST_m_randomA_initialized.METH_read();
	 INST_top.DEF_CAN_FIRE_RL_m_randomA_every_1 = !DEF_INST_top_DEF_m_randomA_initialized__h3833;
	 INST_top.DEF_WILL_FIRE_RL_m_randomA_every_1 = INST_top.DEF_CAN_FIRE_RL_m_randomA_every_1;
	 INST_top.DEF_CAN_FIRE_RL_m_randomB_every = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_m_randomB_every = INST_top.DEF_CAN_FIRE_RL_m_randomB_every;
	 DEF_INST_top_DEF_m_randomB_initialized__h4222 = INST_top.INST_m_randomB_initialized.METH_read();
	 INST_top.DEF_CAN_FIRE_RL_m_randomB_every_1 = !DEF_INST_top_DEF_m_randomB_initialized__h4222;
	 INST_top.DEF_WILL_FIRE_RL_m_randomB_every_1 = INST_top.DEF_CAN_FIRE_RL_m_randomB_every_1;
	 INST_top.DEF_CAN_FIRE_RL_m_randomC_every = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_m_randomC_every = INST_top.DEF_CAN_FIRE_RL_m_randomC_every;
	 DEF_INST_top_DEF_m_randomC_initialized__h4609 = INST_top.INST_m_randomC_initialized.METH_read();
	 INST_top.DEF_CAN_FIRE_RL_m_randomC_every_1 = !DEF_INST_top_DEF_m_randomC_initialized__h4609;
	 INST_top.DEF_WILL_FIRE_RL_m_randomC_every_1 = INST_top.DEF_CAN_FIRE_RL_m_randomC_every_1;
	 DEF_INST_top_DEF_m_randomData_initialized__h4999 = INST_top.INST_m_randomData_initialized.METH_read();
	 INST_top.DEF_CAN_FIRE_RL_m_randomData_every_1 = !DEF_INST_top_DEF_m_randomData_initialized__h4999;
	 INST_top.DEF_WILL_FIRE_RL_m_randomData_every_1 = INST_top.DEF_CAN_FIRE_RL_m_randomData_every_1;
	 INST_top.DEF_CAN_FIRE_RL_m_randomData_every = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_m_randomData_every = INST_top.DEF_CAN_FIRE_RL_m_randomData_every;
	 INST_top.DEF_x__h6070 = INST_top.INST_m_input_count.METH_read();
	 INST_top.DEF_m_input_count_03_EQ_1024___d136 = (INST_top.DEF_x__h6070) == 1024u;
	 INST_top.DEF_CAN_FIRE_RL_m_stop_tb = INST_top.DEF_m_input_count_03_EQ_1024___d136 || (INST_top.DEF_x__h6218) == 9128u;
	 INST_top.DEF_WILL_FIRE_RL_m_stop_tb = INST_top.DEF_CAN_FIRE_RL_m_stop_tb;
	 if (INST_top.DEF_WILL_FIRE_RL_m_check_fifos_not_full)
	   INST_top.RL_m_check_fifos_not_full();
	 if (INST_top.DEF_WILL_FIRE_RL_m_check_fifos_not_empty)
	   INST_top.RL_m_check_fifos_not_empty();
	 if (INST_top.DEF_WILL_FIRE_RL_m_check_fifos_first)
	   INST_top.RL_m_check_fifos_first();
	 if (INST_top.DEF_WILL_FIRE_RL_m_stop_tb)
	   INST_top.RL_m_stop_tb();
	 if (INST_top.DEF_WILL_FIRE_RL_m_randomA_every)
	   INST_top.RL_m_randomA_every();
	 INST_top.DEF_fifo_full__h3124 = INST_top.INST_fifo_full.METH_read();
	 INST_top.DEF_x_wget__h3702 = INST_top.INST_m_randomA_zaz.METH_wget();
	 INST_top.DEF_v__h3839 = INST_top.INST_m_randomA_zaz.METH_whas() ? INST_top.DEF_x_wget__h3702 : (tUInt8)0u;
	 INST_top.DEF_IF_m_randomA_zaz_whas__1_THEN_m_randomA_zaz_wg_ETC___d97 = (INST_top.DEF_v__h3839) == (tUInt8)0u;
	 INST_top.DEF_NOT_fifo_full_9___d58 = !(INST_top.DEF_fifo_full__h3124);
	 INST_top.DEF_CAN_FIRE_RL_m_feed_inputs = (DEF_INST_top_DEF_m_randomA_initialized__h3833 && (INST_top.DEF_IF_m_randomA_zaz_whas__1_THEN_m_randomA_zaz_wg_ETC___d97 || (INST_top.DEF_NOT_fifo_full_9___d58 && (DEF_INST_top_DEF_m_randomData_initialized__h4999 && INST_top.INST_m_ref_fifo.METH_i_notFull())))) && (INST_top.DEF_x__h6070) < 1024u;
	 INST_top.DEF_WILL_FIRE_RL_m_feed_inputs = INST_top.DEF_CAN_FIRE_RL_m_feed_inputs;
	 if (INST_top.DEF_WILL_FIRE_RL_m_randomA_every_1)
	   INST_top.RL_m_randomA_every_1();
	 if (INST_top.DEF_WILL_FIRE_RL_m_randomB_every)
	   INST_top.RL_m_randomB_every();
	 INST_top.DEF_x_wget__h4091 = INST_top.INST_m_randomB_zaz.METH_wget();
	 INST_top.DEF_v__h4228 = INST_top.INST_m_randomB_zaz.METH_whas() ? INST_top.DEF_x_wget__h4091 : (tUInt8)0u;
	 INST_top.DEF_IF_m_randomB_zaz_whas__8_THEN_m_randomB_zaz_wg_ETC___d111 = (INST_top.DEF_v__h4228) == (tUInt8)0u;
	 INST_top.DEF_CAN_FIRE_RL_m_check_outputs = DEF_INST_top_DEF_m_randomB_initialized__h4222 && (INST_top.DEF_IF_m_randomB_zaz_whas__8_THEN_m_randomB_zaz_wg_ETC___d111 || DEF_INST_top_DEF_NOT_fifo_empty_5_3_AND_m_ref_fifo_i_notEmpty__12___d113);
	 INST_top.DEF_WILL_FIRE_RL_m_check_outputs = INST_top.DEF_CAN_FIRE_RL_m_check_outputs;
	 if (INST_top.DEF_WILL_FIRE_RL_m_check_outputs)
	   INST_top.RL_m_check_outputs();
	 if (INST_top.DEF_WILL_FIRE_RL_m_randomB_every_1)
	   INST_top.RL_m_randomB_every_1();
	 if (INST_top.DEF_WILL_FIRE_RL_m_randomC_every)
	   INST_top.RL_m_randomC_every();
	 if (INST_top.DEF_WILL_FIRE_RL_m_randomC_every_1)
	   INST_top.RL_m_randomC_every_1();
	 if (INST_top.DEF_WILL_FIRE_RL_m_randomData_every)
	   INST_top.RL_m_randomData_every();
	 if (INST_top.DEF_WILL_FIRE_RL_m_feed_inputs)
	   INST_top.RL_m_feed_inputs();
	 if (INST_top.DEF_WILL_FIRE_RL_fifo_canonicalize)
	   INST_top.RL_fifo_canonicalize();
	 if (INST_top.DEF_WILL_FIRE_RL_fifo_deqReq_canonicalize)
	   INST_top.RL_fifo_deqReq_canonicalize();
	 if (INST_top.DEF_WILL_FIRE_RL_fifo_enqReq_canonicalize)
	   INST_top.RL_fifo_enqReq_canonicalize();
	 if (INST_top.DEF_WILL_FIRE_RL_m_randomData_every_1)
	   INST_top.RL_m_randomData_every_1();
	 if (INST_top.DEF_WILL_FIRE_RL_m_init)
	   INST_top.RL_m_init();
	 if (INST_top.DEF_WILL_FIRE_RL_m_cycle_inc)
	   INST_top.RL_m_cycle_inc();
	 INST_top.INST_m_randomData_zaz.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_m_randomData_ignore.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_m_randomC_zaz.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_m_randomC_ignore.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_m_randomB_zaz.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_m_randomB_ignore.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_m_randomA_zaz.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_m_randomA_ignore.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_fifo_deqReq_ignored_wires_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_fifo_deqReq_ignored_wires_0.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_fifo_deqReq_wires_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_fifo_deqReq_wires_0.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_fifo_enqReq_ignored_wires_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_fifo_enqReq_ignored_wires_0.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_fifo_enqReq_wires_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_fifo_enqReq_wires_0.clk((tUInt8)1u, (tUInt8)1u);
	 if (do_reset_ticks(simHdl))
	 {
	   INST_top.INST_fifo_empty.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_fifo_full.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_fifo_enqReq_ehrReg.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_fifo_deqReq_ehrReg.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_m_ref_fifo.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_m_cycle.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_m_input_count.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_m_output_count.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_m_randomA_initialized.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_m_randomB_initialized.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_m_randomC_initialized.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_m_randomData_initialized.rst_tick__clk__1((tUInt8)1u);
	 }
       };

/* Model creation/destruction functions */

void MODEL_mkTbCFFunctional::create_model(tSimStateHdl simHdl, bool master)
{
  sim_hdl = simHdl;
  init_reset_request_counters(sim_hdl);
  mkTbCFFunctional_instance = new MOD_mkTbCFFunctional(sim_hdl, "top", NULL);
  bk_get_or_define_clock(sim_hdl, "CLK");
  if (master)
  {
    bk_alter_clock(sim_hdl, bk_get_clock_by_name(sim_hdl, "CLK"), CLK_LOW, false, 0llu, 5llu, 5llu);
    bk_use_default_reset(sim_hdl);
  }
  bk_set_clock_event_fn(sim_hdl,
			bk_get_clock_by_name(sim_hdl, "CLK"),
			schedule_posedge_CLK,
			NULL,
			(tEdgeDirection)(POSEDGE));
  (mkTbCFFunctional_instance->INST_fifo_enqReq_wires_0.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_fifo_enqReq_wires_1.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_fifo_enqReq_ignored_wires_0.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_fifo_enqReq_ignored_wires_1.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_fifo_deqReq_wires_0.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_fifo_deqReq_wires_1.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_fifo_deqReq_ignored_wires_0.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_fifo_deqReq_ignored_wires_1.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_m_ref_fifo.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_m_randomA_ignore.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_m_randomA_zaz.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_m_randomB_ignore.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_m_randomB_zaz.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_m_randomC_ignore.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_m_randomC_zaz.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_m_randomData_ignore.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->INST_m_randomData_zaz.set_clk_0)("CLK");
  (mkTbCFFunctional_instance->set_clk_0)("CLK");
}
void MODEL_mkTbCFFunctional::destroy_model()
{
  delete mkTbCFFunctional_instance;
  mkTbCFFunctional_instance = NULL;
}
void MODEL_mkTbCFFunctional::reset_model(bool asserted)
{
  (mkTbCFFunctional_instance->reset_RST_N)(asserted ? (tUInt8)0u : (tUInt8)1u);
}
void * MODEL_mkTbCFFunctional::get_instance()
{
  return mkTbCFFunctional_instance;
}

/* Fill in version numbers */
void MODEL_mkTbCFFunctional::get_version(unsigned int *year,
					 unsigned int *month,
					 char const **annotation,
					 char const **build)
{
  *year = 0u;
  *month = 0u;
  *annotation = NULL;
  *build = "14ff62d";
}

/* Get the model creation time */
time_t MODEL_mkTbCFFunctional::get_creation_time()
{
  
  /* Fri Jun 16 03:47:38 UTC 2023 */
  return 1686887258llu;
}

/* State dumping function */
void MODEL_mkTbCFFunctional::dump_state()
{
  (mkTbCFFunctional_instance->dump_state)(0u);
}

/* VCD dumping functions */
MOD_mkTbCFFunctional & mkTbCFFunctional_backing(tSimStateHdl simHdl)
{
  static MOD_mkTbCFFunctional *instance = NULL;
  if (instance == NULL)
  {
    vcd_set_backing_instance(simHdl, true);
    instance = new MOD_mkTbCFFunctional(simHdl, "top", NULL);
    vcd_set_backing_instance(simHdl, false);
  }
  return *instance;
}
void MODEL_mkTbCFFunctional::dump_VCD_defs()
{
  (mkTbCFFunctional_instance->dump_VCD_defs)(vcd_depth(sim_hdl));
}
void MODEL_mkTbCFFunctional::dump_VCD(tVCDDumpType dt)
{
  (mkTbCFFunctional_instance->dump_VCD)(dt, vcd_depth(sim_hdl), mkTbCFFunctional_backing(sim_hdl));
}
