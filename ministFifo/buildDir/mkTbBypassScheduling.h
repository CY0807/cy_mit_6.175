/*
 * Generated by Bluespec Compiler (build 14ff62d)
 * 
 * On Sat Jun 10 08:58:51 PDT 2023
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkTbBypassScheduling_h__
#define __mkTbBypassScheduling_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTbBypassScheduling module */
class MOD_mkTbBypassScheduling : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_m_fifo_1_data;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_empty_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_empty_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_empty_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_empty_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_empty_virtual_reg_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_empty_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_empty_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_full_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_full_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_full_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_full_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_full_virtual_reg_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_full_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_full_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_data;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_empty_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_empty_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_empty_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_empty_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_empty_virtual_reg_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_empty_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_empty_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_full_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_full_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_full_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_full_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_full_virtual_reg_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_full_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_full_wires_1;
 
 /* Constructor */
 public:
  MOD_mkTbBypassScheduling(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_m_deq_fifo_1;
  tUInt8 DEF_CAN_FIRE_RL_m_deq_fifo_1;
  tUInt8 DEF_WILL_FIRE_RL_m_enq_fifo_1;
  tUInt8 DEF_CAN_FIRE_RL_m_enq_fifo_1;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_full_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_full_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_empty_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_empty_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_full_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_full_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_empty_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_empty_canonicalize;
 
 /* Local definitions */
 private:
  tUInt8 DEF_def__h7746;
  tUInt8 DEF_m_fifo_1_ehr_virtual_reg_2_read____d49;
  tUInt8 DEF_m_fifo_1_ehr_virtual_reg_1_read____d50;
  tUInt8 DEF_m_fifo_1_full_ehrReg__h1681;
  tUInt8 DEF_m_fifo_1_empty_wires_0_whas____d3;
  tUInt8 DEF_m_fifo_1_empty_wires_0_wget____d4;
  tUInt8 DEF_m_fifo_1_empty_ehrReg__h7315;
  tUInt8 DEF_IF_m_fifo_1_ehr_wires_0_whas__3_THEN_m_fifo_1__ETC___d36;
  tUInt8 DEF_IF_m_fifo_1_full_wires_0_whas__0_THEN_m_fifo_1_ETC___d13;
  tUInt8 DEF_IF_m_fifo_1_empty_wires_0_whas_THEN_m_fifo_1_e_ETC___d6;
 
 /* Rules */
 public:
  void RL_m_fifo_1_empty_canonicalize();
  void RL_m_fifo_1_full_canonicalize();
  void RL_m_fifo_2_empty_canonicalize();
  void RL_m_fifo_2_full_canonicalize();
  void RL_m_fifo_1_ehr_canonicalize();
  void RL_m_fifo_2_ehr_canonicalize();
  void RL_m_enq_fifo_1();
  void RL_m_deq_fifo_1();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbBypassScheduling &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTbBypassScheduling &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTbBypassScheduling &backing);
};

#endif /* ifndef __mkTbBypassScheduling_h__ */
