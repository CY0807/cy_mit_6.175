/*
 * Generated by Bluespec Compiler (build 14ff62d)
 * 
 * On Thu Jun 15 20:47:41 PDT 2023
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkTbCFScheduling_h__
#define __mkTbCFScheduling_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTbCFScheduling module */
class MOD_mkTbCFScheduling : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_m_fifo_1_data_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_data_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_deqReq_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_deqReq_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_deqReq_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_deqReq_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_deqReq_virtual_reg_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_deqReq_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_deqReq_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_empty;
  MOD_Reg<tUInt32> INST_m_fifo_1_enqReq_ehrReg;
  MOD_Wire<tUInt32> INST_m_fifo_1_enqReq_ignored_wires_0;
  MOD_Wire<tUInt32> INST_m_fifo_1_enqReq_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_enqReq_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_enqReq_virtual_reg_1;
  MOD_Wire<tUInt32> INST_m_fifo_1_enqReq_wires_0;
  MOD_Wire<tUInt32> INST_m_fifo_1_enqReq_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_full;
  MOD_Reg<tUInt8> INST_m_fifo_2_data_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_data_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_deqReq_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_deqReq_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_deqReq_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_deqReq_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_deqReq_virtual_reg_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_deqReq_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_deqReq_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_empty;
  MOD_Reg<tUInt32> INST_m_fifo_2_enqReq_ehrReg;
  MOD_Wire<tUInt32> INST_m_fifo_2_enqReq_ignored_wires_0;
  MOD_Wire<tUInt32> INST_m_fifo_2_enqReq_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_enqReq_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_enqReq_virtual_reg_1;
  MOD_Wire<tUInt32> INST_m_fifo_2_enqReq_wires_0;
  MOD_Wire<tUInt32> INST_m_fifo_2_enqReq_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_full;
 
 /* Constructor */
 public:
  MOD_mkTbCFScheduling(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_m_enq_fifo_2;
  tUInt8 DEF_CAN_FIRE_RL_m_enq_fifo_2;
  tUInt8 DEF_WILL_FIRE_RL_m_deq_fifo_2;
  tUInt8 DEF_CAN_FIRE_RL_m_deq_fifo_2;
  tUInt8 DEF_WILL_FIRE_RL_m_deq_fifo_1;
  tUInt8 DEF_CAN_FIRE_RL_m_deq_fifo_1;
  tUInt8 DEF_WILL_FIRE_RL_m_enq_fifo_1;
  tUInt8 DEF_CAN_FIRE_RL_m_enq_fifo_1;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_deqReq_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_deqReq_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_enqReq_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_enqReq_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_deqReq_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_deqReq_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_enqReq_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_enqReq_canonicalize;
 
 /* Local definitions */
 private:
  tUInt8 DEF_IF_m_fifo_2_enqReq_wires_0_whas__0_THEN_m_fifo_ETC___d75;
  tUInt8 DEF_m_fifo_2_empty__h6252;
  tUInt8 DEF_IF_m_fifo_2_deqReq_wires_0_whas__1_THEN_m_fifo_ETC___d94;
  tUInt8 DEF_IF_m_fifo_1_enqReq_wires_0_whas_THEN_m_fifo_1__ETC___d9;
  tUInt8 DEF_m_fifo_1_empty__h3120;
  tUInt8 DEF_IF_m_fifo_1_deqReq_wires_0_whas__5_THEN_m_fifo_ETC___d28;
  tUInt32 DEF_m_fifo_2_enqReq_wires_0_wget____d71;
  tUInt32 DEF_m_fifo_2_enqReq_ehrReg___d73;
  tUInt32 DEF_m_fifo_1_enqReq_wires_0_wget____d5;
  tUInt32 DEF_m_fifo_1_enqReq_ehrReg___d7;
  tUInt8 DEF_def__h10979;
  tUInt8 DEF_def__h9778;
  tUInt8 DEF_m_fifo_2_deqReq_wires_0_whas____d91;
  tUInt8 DEF_m_fifo_2_deqReq_wires_0_wget____d92;
  tUInt8 DEF_m_fifo_2_deqReq_ehrReg__h5122;
  tUInt8 DEF_m_fifo_2_enqReq_wires_0_whas____d70;
  tUInt8 DEF_m_fifo_1_deqReq_wires_0_whas____d25;
  tUInt8 DEF_m_fifo_1_deqReq_wires_0_wget____d26;
  tUInt8 DEF_m_fifo_1_deqReq_ehrReg__h1981;
  tUInt8 DEF_m_fifo_1_enqReq_wires_0_whas____d4;
  tUInt8 DEF_m_fifo_2_ehr_virtual_reg_2_read____d166;
  tUInt8 DEF_m_fifo_2_ehr_virtual_reg_1_read____d167;
  tUInt8 DEF_m_fifo_1_ehr_virtual_reg_2_read____d152;
  tUInt8 DEF_m_fifo_1_ehr_virtual_reg_1_read____d153;
  tUInt8 DEF_m_fifo_2_full__h6266;
  tUInt8 DEF_m_fifo_1_full__h3134;
  tUInt8 DEF_x__h4302;
  tUInt8 DEF_x__h4303;
  tUInt8 DEF_x__h1161;
  tUInt8 DEF_x__h1162;
  tUInt8 DEF_m_fifo_2_enqReq_ehrReg_3_BIT_8___d74;
  tUInt8 DEF_m_fifo_2_enqReq_wires_0_wget__1_BIT_8___d72;
  tUInt8 DEF_m_fifo_1_enqReq_ehrReg_BIT_8___d8;
  tUInt8 DEF_m_fifo_1_enqReq_wires_0_wget_BIT_8___d6;
  tUInt8 DEF_IF_m_fifo_2_enqReq_wires_0_whas__0_THEN_m_fifo_ETC___d85;
  tUInt8 DEF_IF_m_fifo_1_enqReq_wires_0_whas_THEN_m_fifo_1__ETC___d19;
  tUInt8 DEF_IF_m_fifo_2_ehr_wires_0_whas__46_THEN_m_fifo_2_ETC___d149;
  tUInt8 DEF_IF_m_fifo_1_ehr_wires_0_whas__36_THEN_m_fifo_1_ETC___d139;
  tUInt32 DEF__0_CONCAT_DONTCARE___d30;
  tUInt8 DEF_NOT_m_fifo_2_full_14___d123;
  tUInt8 DEF_NOT_m_fifo_2_empty_10___d128;
  tUInt8 DEF_NOT_m_fifo_1_empty_5___d63;
  tUInt8 DEF_NOT_m_fifo_1_full_9___d58;
 
 /* Rules */
 public:
  void RL_m_fifo_1_enqReq_canonicalize();
  void RL_m_fifo_1_deqReq_canonicalize();
  void RL_m_fifo_1_canonicalize();
  void RL_m_fifo_2_enqReq_canonicalize();
  void RL_m_fifo_2_deqReq_canonicalize();
  void RL_m_fifo_2_canonicalize();
  void RL_m_fifo_1_ehr_canonicalize();
  void RL_m_fifo_2_ehr_canonicalize();
  void RL_m_enq_fifo_1();
  void RL_m_deq_fifo_1();
  void RL_m_deq_fifo_2();
  void RL_m_enq_fifo_2();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbCFScheduling &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTbCFScheduling &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTbCFScheduling &backing);
};

#endif /* ifndef __mkTbCFScheduling_h__ */
