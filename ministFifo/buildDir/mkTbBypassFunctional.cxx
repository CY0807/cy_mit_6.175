/*
 * Generated by Bluespec Compiler (build 14ff62d)
 * 
 * On Sat Jun 10 08:58:49 PDT 2023
 * 
 */
#include "bluesim_primitives.h"
#include "mkTbBypassFunctional.h"
#include "imported_BDPI_functions.h"


/* String declarations */
static std::string const __str_literal_9("\tERROR: Reached maximum cycle count!", 36u);
static std::string const __str_literal_1("\tERROR: should have dequeued %0d", 32u);
static std::string const __str_literal_5("\tERROR: test fifo is empty but reference fifo is not.",
					 53u);
static std::string const __str_literal_3("\tERROR: test fifo is full but reference fifo is not.",
					 52u);
static std::string const __str_literal_4("\tERROR: test fifo is not empty but reference fifo is.",
					 53u);
static std::string const __str_literal_2("\tERROR: test fifo is not full but reference fifo is.",
					 52u);
static std::string const __str_literal_6("\tError: fifo.first = %0d but ref_fifo.first = %0d.",
					 50u);
static std::string const __str_literal_7("\tFinished Test, PASS", 20u);
static std::string const __str_literal_8("\tOutput count = %0d", 19u);


/* Constructor */
MOD_mkTbBypassFunctional::MOD_mkTbBypassFunctional(tSimStateHdl simHdl,
						   char const *name,
						   Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_fifo_data(simHdl, "fifo_data", this, 8u),
    INST_fifo_empty_ehrReg(simHdl, "fifo_empty_ehrReg", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_fifo_empty_ignored_wires_0(simHdl, "fifo_empty_ignored_wires_0", this, 1u, (tUInt8)0u),
    INST_fifo_empty_ignored_wires_1(simHdl, "fifo_empty_ignored_wires_1", this, 1u, (tUInt8)0u),
    INST_fifo_empty_virtual_reg_0(simHdl, "fifo_empty_virtual_reg_0", this, 1u, (tUInt8)0u),
    INST_fifo_empty_virtual_reg_1(simHdl, "fifo_empty_virtual_reg_1", this, 1u, (tUInt8)0u),
    INST_fifo_empty_wires_0(simHdl, "fifo_empty_wires_0", this, 1u, (tUInt8)0u),
    INST_fifo_empty_wires_1(simHdl, "fifo_empty_wires_1", this, 1u, (tUInt8)0u),
    INST_fifo_full_ehrReg(simHdl, "fifo_full_ehrReg", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_fifo_full_ignored_wires_0(simHdl, "fifo_full_ignored_wires_0", this, 1u, (tUInt8)0u),
    INST_fifo_full_ignored_wires_1(simHdl, "fifo_full_ignored_wires_1", this, 1u, (tUInt8)0u),
    INST_fifo_full_virtual_reg_0(simHdl, "fifo_full_virtual_reg_0", this, 1u, (tUInt8)0u),
    INST_fifo_full_virtual_reg_1(simHdl, "fifo_full_virtual_reg_1", this, 1u, (tUInt8)0u),
    INST_fifo_full_wires_0(simHdl, "fifo_full_wires_0", this, 1u, (tUInt8)0u),
    INST_fifo_full_wires_1(simHdl, "fifo_full_wires_1", this, 1u, (tUInt8)0u),
    INST_m_cycle(simHdl, "m_cycle", this, 32u, 0u, (tUInt8)0u),
    INST_m_input_count(simHdl, "m_input_count", this, 32u, 0u, (tUInt8)0u),
    INST_m_output_count(simHdl, "m_output_count", this, 32u, 0u, (tUInt8)0u),
    INST_m_randomA_ignore(simHdl, "m_randomA_ignore", this, 2u, (tUInt8)0u),
    INST_m_randomA_initialized(simHdl, "m_randomA_initialized", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_m_randomA_zaz(simHdl, "m_randomA_zaz", this, 2u, (tUInt8)0u),
    INST_m_randomB_ignore(simHdl, "m_randomB_ignore", this, 2u, (tUInt8)0u),
    INST_m_randomB_initialized(simHdl, "m_randomB_initialized", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_m_randomB_zaz(simHdl, "m_randomB_zaz", this, 2u, (tUInt8)0u),
    INST_m_randomC_ignore(simHdl, "m_randomC_ignore", this, 4u, (tUInt8)0u),
    INST_m_randomC_initialized(simHdl, "m_randomC_initialized", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_m_randomC_zaz(simHdl, "m_randomC_zaz", this, 4u, (tUInt8)0u),
    INST_m_randomData_ignore(simHdl, "m_randomData_ignore", this, 8u, (tUInt8)0u),
    INST_m_randomData_initialized(simHdl, "m_randomData_initialized", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_m_randomData_zaz(simHdl, "m_randomData_zaz", this, 8u, (tUInt8)0u),
    INST_m_ref_fifo_rv(simHdl, "m_ref_fifo_rv", this, 9u, 170u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_v__h3503(2863311530u),
    DEF_v__h3113(2863311530u),
    DEF_v__h2726(2863311530u),
    DEF_v__h2336(2863311530u)
{
  symbol_count = 93u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTbBypassFunctional::init_symbols_0()
{
  init_symbol(&symbols[0u],
	      "CAN_FIRE_RL_fifo_empty_canonicalize",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_fifo_empty_canonicalize,
	      1u);
  init_symbol(&symbols[1u],
	      "CAN_FIRE_RL_fifo_full_canonicalize",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_fifo_full_canonicalize,
	      1u);
  init_symbol(&symbols[2u],
	      "CAN_FIRE_RL_m_check_fifos_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_check_fifos_first,
	      1u);
  init_symbol(&symbols[3u],
	      "CAN_FIRE_RL_m_check_fifos_not_empty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_check_fifos_not_empty,
	      1u);
  init_symbol(&symbols[4u],
	      "CAN_FIRE_RL_m_check_fifos_not_full",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_check_fifos_not_full,
	      1u);
  init_symbol(&symbols[5u],
	      "CAN_FIRE_RL_m_check_outputs",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_check_outputs,
	      1u);
  init_symbol(&symbols[6u], "CAN_FIRE_RL_m_cycle_inc", SYM_DEF, &DEF_CAN_FIRE_RL_m_cycle_inc, 1u);
  init_symbol(&symbols[7u], "CAN_FIRE_RL_m_feed_inputs", SYM_DEF, &DEF_CAN_FIRE_RL_m_feed_inputs, 1u);
  init_symbol(&symbols[8u], "CAN_FIRE_RL_m_init", SYM_DEF, &DEF_CAN_FIRE_RL_m_init, 1u);
  init_symbol(&symbols[9u],
	      "CAN_FIRE_RL_m_randomA_every",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_randomA_every,
	      1u);
  init_symbol(&symbols[10u],
	      "CAN_FIRE_RL_m_randomA_every_1",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_randomA_every_1,
	      1u);
  init_symbol(&symbols[11u],
	      "CAN_FIRE_RL_m_randomB_every",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_randomB_every,
	      1u);
  init_symbol(&symbols[12u],
	      "CAN_FIRE_RL_m_randomB_every_1",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_randomB_every_1,
	      1u);
  init_symbol(&symbols[13u],
	      "CAN_FIRE_RL_m_randomC_every",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_randomC_every,
	      1u);
  init_symbol(&symbols[14u],
	      "CAN_FIRE_RL_m_randomC_every_1",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_randomC_every_1,
	      1u);
  init_symbol(&symbols[15u],
	      "CAN_FIRE_RL_m_randomData_every",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_randomData_every,
	      1u);
  init_symbol(&symbols[16u],
	      "CAN_FIRE_RL_m_randomData_every_1",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_m_randomData_every_1,
	      1u);
  init_symbol(&symbols[17u], "CAN_FIRE_RL_m_stop_tb", SYM_DEF, &DEF_CAN_FIRE_RL_m_stop_tb, 1u);
  init_symbol(&symbols[18u], "fifo_data", SYM_MODULE, &INST_fifo_data);
  init_symbol(&symbols[19u], "fifo_empty_ehrReg", SYM_MODULE, &INST_fifo_empty_ehrReg);
  init_symbol(&symbols[20u], "fifo_empty_ehrReg__h5359", SYM_DEF, &DEF_fifo_empty_ehrReg__h5359, 1u);
  init_symbol(&symbols[21u],
	      "fifo_empty_ignored_wires_0",
	      SYM_MODULE,
	      &INST_fifo_empty_ignored_wires_0);
  init_symbol(&symbols[22u],
	      "fifo_empty_ignored_wires_1",
	      SYM_MODULE,
	      &INST_fifo_empty_ignored_wires_1);
  init_symbol(&symbols[23u], "fifo_empty_virtual_reg_0", SYM_MODULE, &INST_fifo_empty_virtual_reg_0);
  init_symbol(&symbols[24u], "fifo_empty_virtual_reg_1", SYM_MODULE, &INST_fifo_empty_virtual_reg_1);
  init_symbol(&symbols[25u], "fifo_empty_wires_0", SYM_MODULE, &INST_fifo_empty_wires_0);
  init_symbol(&symbols[26u], "fifo_empty_wires_1", SYM_MODULE, &INST_fifo_empty_wires_1);
  init_symbol(&symbols[27u], "fifo_full_ehrReg", SYM_MODULE, &INST_fifo_full_ehrReg);
  init_symbol(&symbols[28u], "fifo_full_ehrReg__h1671", SYM_DEF, &DEF_fifo_full_ehrReg__h1671, 1u);
  init_symbol(&symbols[29u],
	      "fifo_full_ignored_wires_0",
	      SYM_MODULE,
	      &INST_fifo_full_ignored_wires_0);
  init_symbol(&symbols[30u],
	      "fifo_full_ignored_wires_1",
	      SYM_MODULE,
	      &INST_fifo_full_ignored_wires_1);
  init_symbol(&symbols[31u], "fifo_full_virtual_reg_0", SYM_MODULE, &INST_fifo_full_virtual_reg_0);
  init_symbol(&symbols[32u], "fifo_full_virtual_reg_1", SYM_MODULE, &INST_fifo_full_virtual_reg_1);
  init_symbol(&symbols[33u], "fifo_full_wires_0", SYM_MODULE, &INST_fifo_full_wires_0);
  init_symbol(&symbols[34u], "fifo_full_wires_1", SYM_MODULE, &INST_fifo_full_wires_1);
  init_symbol(&symbols[35u], "m_cycle", SYM_MODULE, &INST_m_cycle);
  init_symbol(&symbols[36u], "m_input_count", SYM_MODULE, &INST_m_input_count);
  init_symbol(&symbols[37u], "m_output_count", SYM_MODULE, &INST_m_output_count);
  init_symbol(&symbols[38u], "m_randomA_ignore", SYM_MODULE, &INST_m_randomA_ignore);
  init_symbol(&symbols[39u], "m_randomA_initialized", SYM_MODULE, &INST_m_randomA_initialized);
  init_symbol(&symbols[40u], "m_randomA_zaz", SYM_MODULE, &INST_m_randomA_zaz);
  init_symbol(&symbols[41u], "m_randomB_ignore", SYM_MODULE, &INST_m_randomB_ignore);
  init_symbol(&symbols[42u], "m_randomB_initialized", SYM_MODULE, &INST_m_randomB_initialized);
  init_symbol(&symbols[43u], "m_randomB_zaz", SYM_MODULE, &INST_m_randomB_zaz);
  init_symbol(&symbols[44u], "m_randomC_ignore", SYM_MODULE, &INST_m_randomC_ignore);
  init_symbol(&symbols[45u], "m_randomC_initialized", SYM_MODULE, &INST_m_randomC_initialized);
  init_symbol(&symbols[46u], "m_randomC_zaz", SYM_MODULE, &INST_m_randomC_zaz);
  init_symbol(&symbols[47u], "m_randomData_ignore", SYM_MODULE, &INST_m_randomData_ignore);
  init_symbol(&symbols[48u], "m_randomData_initialized", SYM_MODULE, &INST_m_randomData_initialized);
  init_symbol(&symbols[49u], "m_randomData_zaz", SYM_MODULE, &INST_m_randomData_zaz);
  init_symbol(&symbols[50u], "m_ref_fifo_rv", SYM_MODULE, &INST_m_ref_fifo_rv);
  init_symbol(&symbols[51u], "RL_fifo_empty_canonicalize", SYM_RULE);
  init_symbol(&symbols[52u], "RL_fifo_full_canonicalize", SYM_RULE);
  init_symbol(&symbols[53u], "RL_m_check_fifos_first", SYM_RULE);
  init_symbol(&symbols[54u], "RL_m_check_fifos_not_empty", SYM_RULE);
  init_symbol(&symbols[55u], "RL_m_check_fifos_not_full", SYM_RULE);
  init_symbol(&symbols[56u], "RL_m_check_outputs", SYM_RULE);
  init_symbol(&symbols[57u], "RL_m_cycle_inc", SYM_RULE);
  init_symbol(&symbols[58u], "RL_m_feed_inputs", SYM_RULE);
  init_symbol(&symbols[59u], "RL_m_init", SYM_RULE);
  init_symbol(&symbols[60u], "RL_m_randomA_every", SYM_RULE);
  init_symbol(&symbols[61u], "RL_m_randomA_every_1", SYM_RULE);
  init_symbol(&symbols[62u], "RL_m_randomB_every", SYM_RULE);
  init_symbol(&symbols[63u], "RL_m_randomB_every_1", SYM_RULE);
  init_symbol(&symbols[64u], "RL_m_randomC_every", SYM_RULE);
  init_symbol(&symbols[65u], "RL_m_randomC_every_1", SYM_RULE);
  init_symbol(&symbols[66u], "RL_m_randomData_every", SYM_RULE);
  init_symbol(&symbols[67u], "RL_m_randomData_every_1", SYM_RULE);
  init_symbol(&symbols[68u], "RL_m_stop_tb", SYM_RULE);
  init_symbol(&symbols[69u], "v__h2417", SYM_DEF, &DEF_v__h2417, 2u);
  init_symbol(&symbols[70u], "v__h2806", SYM_DEF, &DEF_v__h2806, 2u);
  init_symbol(&symbols[71u],
	      "WILL_FIRE_RL_fifo_empty_canonicalize",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_fifo_empty_canonicalize,
	      1u);
  init_symbol(&symbols[72u],
	      "WILL_FIRE_RL_fifo_full_canonicalize",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_fifo_full_canonicalize,
	      1u);
  init_symbol(&symbols[73u],
	      "WILL_FIRE_RL_m_check_fifos_first",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_check_fifos_first,
	      1u);
  init_symbol(&symbols[74u],
	      "WILL_FIRE_RL_m_check_fifos_not_empty",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_check_fifos_not_empty,
	      1u);
  init_symbol(&symbols[75u],
	      "WILL_FIRE_RL_m_check_fifos_not_full",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_check_fifos_not_full,
	      1u);
  init_symbol(&symbols[76u],
	      "WILL_FIRE_RL_m_check_outputs",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_check_outputs,
	      1u);
  init_symbol(&symbols[77u], "WILL_FIRE_RL_m_cycle_inc", SYM_DEF, &DEF_WILL_FIRE_RL_m_cycle_inc, 1u);
  init_symbol(&symbols[78u],
	      "WILL_FIRE_RL_m_feed_inputs",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_feed_inputs,
	      1u);
  init_symbol(&symbols[79u], "WILL_FIRE_RL_m_init", SYM_DEF, &DEF_WILL_FIRE_RL_m_init, 1u);
  init_symbol(&symbols[80u],
	      "WILL_FIRE_RL_m_randomA_every",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_randomA_every,
	      1u);
  init_symbol(&symbols[81u],
	      "WILL_FIRE_RL_m_randomA_every_1",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_randomA_every_1,
	      1u);
  init_symbol(&symbols[82u],
	      "WILL_FIRE_RL_m_randomB_every",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_randomB_every,
	      1u);
  init_symbol(&symbols[83u],
	      "WILL_FIRE_RL_m_randomB_every_1",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_randomB_every_1,
	      1u);
  init_symbol(&symbols[84u],
	      "WILL_FIRE_RL_m_randomC_every",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_randomC_every,
	      1u);
  init_symbol(&symbols[85u],
	      "WILL_FIRE_RL_m_randomC_every_1",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_randomC_every_1,
	      1u);
  init_symbol(&symbols[86u],
	      "WILL_FIRE_RL_m_randomData_every",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_randomData_every,
	      1u);
  init_symbol(&symbols[87u],
	      "WILL_FIRE_RL_m_randomData_every_1",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_m_randomData_every_1,
	      1u);
  init_symbol(&symbols[88u], "WILL_FIRE_RL_m_stop_tb", SYM_DEF, &DEF_WILL_FIRE_RL_m_stop_tb, 1u);
  init_symbol(&symbols[89u], "x__h5741", SYM_DEF, &DEF_x__h5741, 32u);
  init_symbol(&symbols[90u], "x__h5889", SYM_DEF, &DEF_x__h5889, 32u);
  init_symbol(&symbols[91u], "x_wget__h2279", SYM_DEF, &DEF_x_wget__h2279, 2u);
  init_symbol(&symbols[92u], "x_wget__h2669", SYM_DEF, &DEF_x_wget__h2669, 2u);
}


/* Rule actions */

void MOD_mkTbBypassFunctional::RL_fifo_empty_canonicalize()
{
  tUInt8 DEF_IF_fifo_empty_wires_1_whas_THEN_fifo_empty_wir_ETC___d7;
  DEF_fifo_empty_wires_0_whas____d3 = INST_fifo_empty_wires_0.METH_whas();
  DEF_fifo_empty_wires_0_wget____d4 = INST_fifo_empty_wires_0.METH_wget();
  DEF_fifo_empty_ehrReg__h5359 = INST_fifo_empty_ehrReg.METH_read();
  DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6 = DEF_fifo_empty_wires_0_whas____d3 ? DEF_fifo_empty_wires_0_wget____d4 : DEF_fifo_empty_ehrReg__h5359;
  DEF_IF_fifo_empty_wires_1_whas_THEN_fifo_empty_wir_ETC___d7 = INST_fifo_empty_wires_1.METH_whas() ? INST_fifo_empty_wires_1.METH_wget() : DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6;
  INST_fifo_empty_ehrReg.METH_write(DEF_IF_fifo_empty_wires_1_whas_THEN_fifo_empty_wir_ETC___d7);
}

void MOD_mkTbBypassFunctional::RL_fifo_full_canonicalize()
{
  tUInt8 DEF_IF_fifo_full_wires_1_whas_THEN_fifo_full_wires_ETC___d14;
  DEF_fifo_full_ehrReg__h1671 = INST_fifo_full_ehrReg.METH_read();
  DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13 = INST_fifo_full_wires_0.METH_whas() ? INST_fifo_full_wires_0.METH_wget() : DEF_fifo_full_ehrReg__h1671;
  DEF_IF_fifo_full_wires_1_whas_THEN_fifo_full_wires_ETC___d14 = INST_fifo_full_wires_1.METH_whas() ? INST_fifo_full_wires_1.METH_wget() : DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13;
  INST_fifo_full_ehrReg.METH_write(DEF_IF_fifo_full_wires_1_whas_THEN_fifo_full_wires_ETC___d14);
}

void MOD_mkTbBypassFunctional::RL_m_randomA_every()
{
  tUInt8 DEF_new_value__h2378;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_v__h2336 = rand32();
  DEF_new_value__h2378 = (tUInt8)((tUInt8)3u & DEF_v__h2336);
  INST_m_randomA_zaz.METH_wset(DEF_new_value__h2378);
}

void MOD_mkTbBypassFunctional::RL_m_randomA_every_1()
{
  DEF_x_wget__h2279 = INST_m_randomA_zaz.METH_wget();
  DEF_v__h2417 = INST_m_randomA_zaz.METH_whas() ? DEF_x_wget__h2279 : (tUInt8)0u;
  INST_m_randomA_ignore.METH_wset(DEF_v__h2417);
}

void MOD_mkTbBypassFunctional::RL_m_randomB_every()
{
  tUInt8 DEF_new_value__h2768;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_v__h2726 = rand32();
  DEF_new_value__h2768 = (tUInt8)((tUInt8)3u & DEF_v__h2726);
  INST_m_randomB_zaz.METH_wset(DEF_new_value__h2768);
}

void MOD_mkTbBypassFunctional::RL_m_randomB_every_1()
{
  DEF_x_wget__h2669 = INST_m_randomB_zaz.METH_wget();
  DEF_v__h2806 = INST_m_randomB_zaz.METH_whas() ? DEF_x_wget__h2669 : (tUInt8)0u;
  INST_m_randomB_ignore.METH_wset(DEF_v__h2806);
}

void MOD_mkTbBypassFunctional::RL_m_randomC_every()
{
  tUInt8 DEF_new_value__h3155;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_v__h3113 = rand32();
  DEF_new_value__h3155 = (tUInt8)((tUInt8)15u & DEF_v__h3113);
  INST_m_randomC_zaz.METH_wset(DEF_new_value__h3155);
}

void MOD_mkTbBypassFunctional::RL_m_randomC_every_1()
{
  tUInt8 DEF_v__h3193;
  tUInt8 DEF_x_wget__h3056;
  DEF_x_wget__h3056 = INST_m_randomC_zaz.METH_wget();
  DEF_v__h3193 = INST_m_randomC_zaz.METH_whas() ? DEF_x_wget__h3056 : (tUInt8)0u;
  INST_m_randomC_ignore.METH_wset(DEF_v__h3193);
}

void MOD_mkTbBypassFunctional::RL_m_randomData_every()
{
  tUInt8 DEF_new_value__h3545;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_v__h3503 = rand32();
  DEF_new_value__h3545 = (tUInt8)((tUInt8)255u & DEF_v__h3503);
  INST_m_randomData_zaz.METH_wset(DEF_new_value__h3545);
}

void MOD_mkTbBypassFunctional::RL_m_randomData_every_1()
{
  DEF_x_wget__h3446 = INST_m_randomData_zaz.METH_wget();
  DEF_v__h3583 = INST_m_randomData_zaz.METH_whas() ? DEF_x_wget__h3446 : (tUInt8)0u;
  INST_m_randomData_ignore.METH_wset(DEF_v__h3583);
}

void MOD_mkTbBypassFunctional::RL_m_init()
{
  INST_m_randomA_initialized.METH_write((tUInt8)1u);
  INST_m_randomB_initialized.METH_write((tUInt8)1u);
  INST_m_randomC_initialized.METH_write((tUInt8)1u);
  INST_m_randomData_initialized.METH_write((tUInt8)1u);
}

void MOD_mkTbBypassFunctional::RL_m_feed_inputs()
{
  tUInt32 DEF_x__h4756;
  tUInt8 DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61;
  tUInt32 DEF__1_CONCAT_IF_m_randomData_zaz_whas__0_THEN_m_ra_ETC___d62;
  DEF_fifo_full_ehrReg__h1671 = INST_fifo_full_ehrReg.METH_read();
  DEF_x__h5741 = INST_m_input_count.METH_read();
  DEF_x_wget__h3446 = INST_m_randomData_zaz.METH_wget();
  DEF_x_wget__h2279 = INST_m_randomA_zaz.METH_wget();
  DEF_fifo_empty_ehrReg__h5359 = INST_fifo_empty_ehrReg.METH_read();
  DEF_v__h3583 = INST_m_randomData_zaz.METH_whas() ? DEF_x_wget__h3446 : (tUInt8)0u;
  DEF_v__h2417 = INST_m_randomA_zaz.METH_whas() ? DEF_x_wget__h2279 : (tUInt8)0u;
  DEF_IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45 = DEF_v__h2417 == (tUInt8)0u;
  DEF__1_CONCAT_IF_m_randomData_zaz_whas__0_THEN_m_ra_ETC___d62 = 511u & ((((tUInt32)((tUInt8)1u)) << 8u) | (tUInt32)(DEF_v__h3583));
  DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61 = !DEF_IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45;
  DEF_x__h4756 = DEF_x__h5741 + 1u;
  if (DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61)
    INST_fifo_full_wires_0.METH_wset((tUInt8)1u);
  if (DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61)
    INST_fifo_full_ignored_wires_0.METH_wset(DEF_fifo_full_ehrReg__h1671);
  if (DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61)
    INST_fifo_full_virtual_reg_0.METH_write((tUInt8)0u);
  if (DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61)
    INST_fifo_empty_wires_0.METH_wset((tUInt8)0u);
  if (DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61)
    INST_fifo_empty_ignored_wires_0.METH_wset(DEF_fifo_empty_ehrReg__h5359);
  if (DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61)
    INST_fifo_empty_virtual_reg_0.METH_write((tUInt8)0u);
  if (DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61)
    INST_fifo_data.METH_write(DEF_v__h3583);
  if (DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61)
    INST_m_ref_fifo_rv.METH_port0__write(DEF__1_CONCAT_IF_m_randomData_zaz_whas__0_THEN_m_ra_ETC___d62);
  if (DEF_NOT_IF_m_randomA_zaz_whas__9_THEN_m_randomA_za_ETC___d61)
    INST_m_input_count.METH_write(DEF_x__h4756);
}

void MOD_mkTbBypassFunctional::RL_m_check_outputs()
{
  tUInt32 DEF_x__h5475;
  tUInt8 DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75;
  tUInt8 DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d81;
  tUInt32 DEF__0_CONCAT_DONTCARE___d76;
  DEF_fifo_full_ehrReg__h1671 = INST_fifo_full_ehrReg.METH_read();
  DEF_x__h5479 = INST_m_output_count.METH_read();
  DEF_m_ref_fifo_rv_port1__read____d65 = INST_m_ref_fifo_rv.METH_port1__read();
  DEF_y__h5675 = INST_fifo_data.METH_read();
  DEF_fifo_empty_wires_0_whas____d3 = INST_fifo_empty_wires_0.METH_whas();
  DEF_x_wget__h2669 = INST_m_randomB_zaz.METH_wget();
  DEF_fifo_empty_wires_0_wget____d4 = INST_fifo_empty_wires_0.METH_wget();
  DEF_fifo_empty_ehrReg__h5359 = INST_fifo_empty_ehrReg.METH_read();
  DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6 = DEF_fifo_empty_wires_0_whas____d3 ? DEF_fifo_empty_wires_0_wget____d4 : DEF_fifo_empty_ehrReg__h5359;
  DEF_x_first__h1978 = (tUInt8)((tUInt8)255u & DEF_m_ref_fifo_rv_port1__read____d65);
  DEF_v__h2806 = INST_m_randomB_zaz.METH_whas() ? DEF_x_wget__h2669 : (tUInt8)0u;
  DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13 = INST_fifo_full_wires_0.METH_whas() ? INST_fifo_full_wires_0.METH_wget() : DEF_fifo_full_ehrReg__h1671;
  DEF_IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64 = DEF_v__h2806 == (tUInt8)0u;
  DEF__0_CONCAT_DONTCARE___d76 = 170u;
  DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75 = !DEF_IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64;
  DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d81 = DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75 && !(DEF_y__h5675 == DEF_x_first__h1978);
  DEF_x__h5475 = DEF_x__h5479 + 1u;
  if (DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75)
    INST_fifo_empty_wires_1.METH_wset((tUInt8)1u);
  if (DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75)
    INST_fifo_empty_ignored_wires_1.METH_wset(DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6);
  if (DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75)
    INST_fifo_full_wires_1.METH_wset((tUInt8)0u);
  if (DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75)
    INST_fifo_empty_virtual_reg_1.METH_write((tUInt8)0u);
  if (DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75)
    INST_fifo_full_ignored_wires_1.METH_wset(DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13);
  if (DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75)
    INST_fifo_full_virtual_reg_1.METH_write((tUInt8)0u);
  if (DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75)
    INST_m_ref_fifo_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d76);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d81)
      dollar_display(sim_hdl, this, "s,8", &__str_literal_1, DEF_x_first__h1978);
    if (DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d81)
      dollar_finish(sim_hdl, "32", 1u);
  }
  if (DEF_NOT_IF_m_randomB_zaz_whas__6_THEN_m_randomB_za_ETC___d75)
    INST_m_output_count.METH_write(DEF_x__h5475);
}

void MOD_mkTbBypassFunctional::RL_m_check_fifos_not_full()
{
  tUInt8 DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d86;
  tUInt8 DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d85;
  tUInt8 DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d91;
  DEF_fifo_full_ehrReg__h1671 = INST_fifo_full_ehrReg.METH_read();
  DEF_fifo_full_virtual_reg_1_read____d46 = INST_fifo_full_virtual_reg_1.METH_read();
  DEF_fifo_full_virtual_reg_0_read____d47 = INST_fifo_full_virtual_reg_0.METH_read();
  DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50 = DEF_fifo_full_virtual_reg_1_read____d46 || (DEF_fifo_full_virtual_reg_0_read____d47 || !DEF_fifo_full_ehrReg__h1671);
  DEF_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53 = !((tUInt8)(INST_m_ref_fifo_rv.METH_port0__read() >> 8u));
  DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d85 = !(DEF_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53 == DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50);
  DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d91 = DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d85 && (!DEF_fifo_full_virtual_reg_1_read____d46 && (!DEF_fifo_full_virtual_reg_0_read____d47 && DEF_fifo_full_ehrReg__h1671));
  DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d86 = DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d85 && DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d86)
      dollar_display(sim_hdl, this, "s", &__str_literal_2);
    if (DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d86)
      dollar_finish(sim_hdl, "32", 1u);
    if (DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d91)
      dollar_display(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_NOT_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2_3_ETC___d91)
      dollar_finish(sim_hdl, "32", 1u);
  }
}

void MOD_mkTbBypassFunctional::RL_m_check_fifos_not_empty()
{
  tUInt8 DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d94;
  tUInt8 DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d93;
  tUInt8 DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d97;
  DEF_fifo_empty_virtual_reg_1_read____d67 = INST_fifo_empty_virtual_reg_1.METH_read();
  DEF_m_ref_fifo_rv_port1__read____d65 = INST_m_ref_fifo_rv.METH_port1__read();
  DEF_fifo_empty_wires_0_whas____d3 = INST_fifo_empty_wires_0.METH_whas();
  DEF_fifo_empty_wires_0_wget____d4 = INST_fifo_empty_wires_0.METH_wget();
  DEF_fifo_empty_ehrReg__h5359 = INST_fifo_empty_ehrReg.METH_read();
  DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71 = DEF_fifo_empty_virtual_reg_1_read____d67 || (DEF_fifo_empty_wires_0_whas____d3 ? !DEF_fifo_empty_wires_0_wget____d4 : !DEF_fifo_empty_ehrReg__h5359);
  DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6 = DEF_fifo_empty_wires_0_whas____d3 ? DEF_fifo_empty_wires_0_wget____d4 : DEF_fifo_empty_ehrReg__h5359;
  DEF_m_ref_fifo_rv_port1__read__5_BIT_8___d66 = (tUInt8)(DEF_m_ref_fifo_rv_port1__read____d65 >> 8u);
  DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d93 = !(DEF_m_ref_fifo_rv_port1__read__5_BIT_8___d66 == DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71);
  DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d97 = DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d93 && (!DEF_fifo_empty_virtual_reg_1_read____d67 && DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6);
  DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d94 = DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d93 && DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d94)
      dollar_display(sim_hdl, this, "s", &__str_literal_4);
    if (DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d94)
      dollar_finish(sim_hdl, "32", 1u);
    if (DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d97)
      dollar_display(sim_hdl, this, "s", &__str_literal_5);
    if (DEF_NOT_m_ref_fifo_rv_port1__read__5_BIT_8_6_EQ_fi_ETC___d97)
      dollar_finish(sim_hdl, "32", 1u);
  }
}

void MOD_mkTbBypassFunctional::RL_m_check_fifos_first()
{
  tUInt8 DEF_NOT_m_ref_fifo_rv_port1__read__5_BITS_7_TO_0_8_ETC___d99;
  DEF_m_ref_fifo_rv_port1__read____d65 = INST_m_ref_fifo_rv.METH_port1__read();
  DEF_y__h5675 = INST_fifo_data.METH_read();
  DEF_x_first__h1978 = (tUInt8)((tUInt8)255u & DEF_m_ref_fifo_rv_port1__read____d65);
  DEF_NOT_m_ref_fifo_rv_port1__read__5_BITS_7_TO_0_8_ETC___d99 = !(DEF_x_first__h1978 == DEF_y__h5675);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_m_ref_fifo_rv_port1__read__5_BITS_7_TO_0_8_ETC___d99)
      dollar_display(sim_hdl, this, "s,8,8", &__str_literal_6, DEF_y__h5675, DEF_x_first__h1978);
    if (DEF_NOT_m_ref_fifo_rv_port1__read__5_BITS_7_TO_0_8_ETC___d99)
      dollar_finish(sim_hdl, "32", 1u);
  }
}

void MOD_mkTbBypassFunctional::RL_m_stop_tb()
{
  tUInt8 DEF_NOT_m_input_count_8_EQ_1024_00___d103;
  DEF_x__h5479 = INST_m_output_count.METH_read();
  DEF_x__h5741 = INST_m_input_count.METH_read();
  DEF_m_input_count_8_EQ_1024___d100 = DEF_x__h5741 == 1024u;
  DEF_NOT_m_input_count_8_EQ_1024_00___d103 = !DEF_m_input_count_8_EQ_1024___d100;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_m_input_count_8_EQ_1024___d100)
      dollar_display(sim_hdl, this, "s", &__str_literal_7);
    if (DEF_m_input_count_8_EQ_1024___d100)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_8, DEF_x__h5479);
    if (DEF_NOT_m_input_count_8_EQ_1024_00___d103)
      dollar_display(sim_hdl, this, "s", &__str_literal_9);
    dollar_finish(sim_hdl, "32", 1u);
  }
}

void MOD_mkTbBypassFunctional::RL_m_cycle_inc()
{
  tUInt32 DEF_x__h5884;
  DEF_x__h5889 = INST_m_cycle.METH_read();
  DEF_x__h5884 = DEF_x__h5889 + 1u;
  INST_m_cycle.METH_write(DEF_x__h5884);
}


/* Methods */


/* Reset routines */

void MOD_mkTbBypassFunctional::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_m_ref_fifo_rv.reset_RST(ARG_rst_in);
  INST_m_randomData_initialized.reset_RST(ARG_rst_in);
  INST_m_randomC_initialized.reset_RST(ARG_rst_in);
  INST_m_randomB_initialized.reset_RST(ARG_rst_in);
  INST_m_randomA_initialized.reset_RST(ARG_rst_in);
  INST_m_output_count.reset_RST(ARG_rst_in);
  INST_m_input_count.reset_RST(ARG_rst_in);
  INST_m_cycle.reset_RST(ARG_rst_in);
  INST_fifo_full_ehrReg.reset_RST(ARG_rst_in);
  INST_fifo_empty_ehrReg.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTbBypassFunctional::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTbBypassFunctional::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_fifo_data.dump_state(indent + 2u);
  INST_fifo_empty_ehrReg.dump_state(indent + 2u);
  INST_fifo_empty_ignored_wires_0.dump_state(indent + 2u);
  INST_fifo_empty_ignored_wires_1.dump_state(indent + 2u);
  INST_fifo_empty_virtual_reg_0.dump_state(indent + 2u);
  INST_fifo_empty_virtual_reg_1.dump_state(indent + 2u);
  INST_fifo_empty_wires_0.dump_state(indent + 2u);
  INST_fifo_empty_wires_1.dump_state(indent + 2u);
  INST_fifo_full_ehrReg.dump_state(indent + 2u);
  INST_fifo_full_ignored_wires_0.dump_state(indent + 2u);
  INST_fifo_full_ignored_wires_1.dump_state(indent + 2u);
  INST_fifo_full_virtual_reg_0.dump_state(indent + 2u);
  INST_fifo_full_virtual_reg_1.dump_state(indent + 2u);
  INST_fifo_full_wires_0.dump_state(indent + 2u);
  INST_fifo_full_wires_1.dump_state(indent + 2u);
  INST_m_cycle.dump_state(indent + 2u);
  INST_m_input_count.dump_state(indent + 2u);
  INST_m_output_count.dump_state(indent + 2u);
  INST_m_randomA_ignore.dump_state(indent + 2u);
  INST_m_randomA_initialized.dump_state(indent + 2u);
  INST_m_randomA_zaz.dump_state(indent + 2u);
  INST_m_randomB_ignore.dump_state(indent + 2u);
  INST_m_randomB_initialized.dump_state(indent + 2u);
  INST_m_randomB_zaz.dump_state(indent + 2u);
  INST_m_randomC_ignore.dump_state(indent + 2u);
  INST_m_randomC_initialized.dump_state(indent + 2u);
  INST_m_randomC_zaz.dump_state(indent + 2u);
  INST_m_randomData_ignore.dump_state(indent + 2u);
  INST_m_randomData_initialized.dump_state(indent + 2u);
  INST_m_randomData_zaz.dump_state(indent + 2u);
  INST_m_ref_fifo_rv.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTbBypassFunctional::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 100u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_fifo_empty_canonicalize", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_fifo_full_canonicalize", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_check_fifos_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_check_fifos_not_empty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_check_fifos_not_full", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_check_outputs", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_cycle_inc", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_feed_inputs", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_init", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_randomA_every", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_randomA_every_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_randomB_every", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_randomB_every_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_randomC_every", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_randomC_every_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_randomData_every", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_randomData_every_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_m_stop_tb", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_fifo_empty_canonicalize", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_fifo_full_canonicalize", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_check_fifos_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_check_fifos_not_empty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_check_fifos_not_full", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_check_outputs", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_cycle_inc", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_feed_inputs", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_init", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_randomA_every", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_randomA_every_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_randomB_every", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_randomB_every_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_randomC_every", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_randomC_every_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_randomData_every", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_randomData_every_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_m_stop_tb", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fifo_empty_ehrReg__h5359", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fifo_empty_virtual_reg_1_read____d67", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fifo_empty_wires_0_wget____d4", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fifo_empty_wires_0_whas____d3", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fifo_full_ehrReg__h1671", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fifo_full_virtual_reg_0_read____d47", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fifo_full_virtual_reg_1_read____d46", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_input_count_8_EQ_1024___d100", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_ref_fifo_rv_port1__read__5_BIT_8___d66", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_ref_fifo_rv_port1__read____d65", 9u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2336", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2417", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2726", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2806", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3113", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3503", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3583", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h5479", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h5741", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h5889", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x_first__h1978", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x_wget__h2279", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x_wget__h2669", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x_wget__h3446", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h5675", 8u);
  num = INST_fifo_data.dump_VCD_defs(num);
  num = INST_fifo_empty_ehrReg.dump_VCD_defs(num);
  num = INST_fifo_empty_ignored_wires_0.dump_VCD_defs(num);
  num = INST_fifo_empty_ignored_wires_1.dump_VCD_defs(num);
  num = INST_fifo_empty_virtual_reg_0.dump_VCD_defs(num);
  num = INST_fifo_empty_virtual_reg_1.dump_VCD_defs(num);
  num = INST_fifo_empty_wires_0.dump_VCD_defs(num);
  num = INST_fifo_empty_wires_1.dump_VCD_defs(num);
  num = INST_fifo_full_ehrReg.dump_VCD_defs(num);
  num = INST_fifo_full_ignored_wires_0.dump_VCD_defs(num);
  num = INST_fifo_full_ignored_wires_1.dump_VCD_defs(num);
  num = INST_fifo_full_virtual_reg_0.dump_VCD_defs(num);
  num = INST_fifo_full_virtual_reg_1.dump_VCD_defs(num);
  num = INST_fifo_full_wires_0.dump_VCD_defs(num);
  num = INST_fifo_full_wires_1.dump_VCD_defs(num);
  num = INST_m_cycle.dump_VCD_defs(num);
  num = INST_m_input_count.dump_VCD_defs(num);
  num = INST_m_output_count.dump_VCD_defs(num);
  num = INST_m_randomA_ignore.dump_VCD_defs(num);
  num = INST_m_randomA_initialized.dump_VCD_defs(num);
  num = INST_m_randomA_zaz.dump_VCD_defs(num);
  num = INST_m_randomB_ignore.dump_VCD_defs(num);
  num = INST_m_randomB_initialized.dump_VCD_defs(num);
  num = INST_m_randomB_zaz.dump_VCD_defs(num);
  num = INST_m_randomC_ignore.dump_VCD_defs(num);
  num = INST_m_randomC_initialized.dump_VCD_defs(num);
  num = INST_m_randomC_zaz.dump_VCD_defs(num);
  num = INST_m_randomData_ignore.dump_VCD_defs(num);
  num = INST_m_randomData_initialized.dump_VCD_defs(num);
  num = INST_m_randomData_zaz.dump_VCD_defs(num);
  num = INST_m_ref_fifo_rv.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTbBypassFunctional::dump_VCD(tVCDDumpType dt,
					unsigned int levels,
					MOD_mkTbBypassFunctional &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkTbBypassFunctional::vcd_defs(tVCDDumpType dt, MOD_mkTbBypassFunctional &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 9u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 8u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_fifo_empty_canonicalize) != DEF_CAN_FIRE_RL_fifo_empty_canonicalize)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_fifo_empty_canonicalize, 1u);
	backing.DEF_CAN_FIRE_RL_fifo_empty_canonicalize = DEF_CAN_FIRE_RL_fifo_empty_canonicalize;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_fifo_full_canonicalize) != DEF_CAN_FIRE_RL_fifo_full_canonicalize)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_fifo_full_canonicalize, 1u);
	backing.DEF_CAN_FIRE_RL_fifo_full_canonicalize = DEF_CAN_FIRE_RL_fifo_full_canonicalize;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_check_fifos_first) != DEF_CAN_FIRE_RL_m_check_fifos_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_check_fifos_first, 1u);
	backing.DEF_CAN_FIRE_RL_m_check_fifos_first = DEF_CAN_FIRE_RL_m_check_fifos_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_check_fifos_not_empty) != DEF_CAN_FIRE_RL_m_check_fifos_not_empty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_check_fifos_not_empty, 1u);
	backing.DEF_CAN_FIRE_RL_m_check_fifos_not_empty = DEF_CAN_FIRE_RL_m_check_fifos_not_empty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_check_fifos_not_full) != DEF_CAN_FIRE_RL_m_check_fifos_not_full)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_check_fifos_not_full, 1u);
	backing.DEF_CAN_FIRE_RL_m_check_fifos_not_full = DEF_CAN_FIRE_RL_m_check_fifos_not_full;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_check_outputs) != DEF_CAN_FIRE_RL_m_check_outputs)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_check_outputs, 1u);
	backing.DEF_CAN_FIRE_RL_m_check_outputs = DEF_CAN_FIRE_RL_m_check_outputs;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_cycle_inc) != DEF_CAN_FIRE_RL_m_cycle_inc)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_cycle_inc, 1u);
	backing.DEF_CAN_FIRE_RL_m_cycle_inc = DEF_CAN_FIRE_RL_m_cycle_inc;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_feed_inputs) != DEF_CAN_FIRE_RL_m_feed_inputs)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_feed_inputs, 1u);
	backing.DEF_CAN_FIRE_RL_m_feed_inputs = DEF_CAN_FIRE_RL_m_feed_inputs;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_init) != DEF_CAN_FIRE_RL_m_init)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_init, 1u);
	backing.DEF_CAN_FIRE_RL_m_init = DEF_CAN_FIRE_RL_m_init;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_randomA_every) != DEF_CAN_FIRE_RL_m_randomA_every)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_randomA_every, 1u);
	backing.DEF_CAN_FIRE_RL_m_randomA_every = DEF_CAN_FIRE_RL_m_randomA_every;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_randomA_every_1) != DEF_CAN_FIRE_RL_m_randomA_every_1)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_randomA_every_1, 1u);
	backing.DEF_CAN_FIRE_RL_m_randomA_every_1 = DEF_CAN_FIRE_RL_m_randomA_every_1;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_randomB_every) != DEF_CAN_FIRE_RL_m_randomB_every)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_randomB_every, 1u);
	backing.DEF_CAN_FIRE_RL_m_randomB_every = DEF_CAN_FIRE_RL_m_randomB_every;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_randomB_every_1) != DEF_CAN_FIRE_RL_m_randomB_every_1)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_randomB_every_1, 1u);
	backing.DEF_CAN_FIRE_RL_m_randomB_every_1 = DEF_CAN_FIRE_RL_m_randomB_every_1;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_randomC_every) != DEF_CAN_FIRE_RL_m_randomC_every)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_randomC_every, 1u);
	backing.DEF_CAN_FIRE_RL_m_randomC_every = DEF_CAN_FIRE_RL_m_randomC_every;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_randomC_every_1) != DEF_CAN_FIRE_RL_m_randomC_every_1)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_randomC_every_1, 1u);
	backing.DEF_CAN_FIRE_RL_m_randomC_every_1 = DEF_CAN_FIRE_RL_m_randomC_every_1;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_randomData_every) != DEF_CAN_FIRE_RL_m_randomData_every)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_randomData_every, 1u);
	backing.DEF_CAN_FIRE_RL_m_randomData_every = DEF_CAN_FIRE_RL_m_randomData_every;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_randomData_every_1) != DEF_CAN_FIRE_RL_m_randomData_every_1)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_randomData_every_1, 1u);
	backing.DEF_CAN_FIRE_RL_m_randomData_every_1 = DEF_CAN_FIRE_RL_m_randomData_every_1;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_m_stop_tb) != DEF_CAN_FIRE_RL_m_stop_tb)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_m_stop_tb, 1u);
	backing.DEF_CAN_FIRE_RL_m_stop_tb = DEF_CAN_FIRE_RL_m_stop_tb;
      }
      ++num;
      if ((backing.DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6) != DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6, 1u);
	backing.DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6 = DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6;
      }
      ++num;
      if ((backing.DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13) != DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13, 1u);
	backing.DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13 = DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13;
      }
      ++num;
      if ((backing.DEF_IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45) != DEF_IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45, 1u);
	backing.DEF_IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45 = DEF_IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45;
      }
      ++num;
      if ((backing.DEF_IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64) != DEF_IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64, 1u);
	backing.DEF_IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64 = DEF_IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64;
      }
      ++num;
      if ((backing.DEF_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53) != DEF_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53, 1u);
	backing.DEF_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53 = DEF_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_fifo_empty_canonicalize) != DEF_WILL_FIRE_RL_fifo_empty_canonicalize)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_fifo_empty_canonicalize, 1u);
	backing.DEF_WILL_FIRE_RL_fifo_empty_canonicalize = DEF_WILL_FIRE_RL_fifo_empty_canonicalize;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_fifo_full_canonicalize) != DEF_WILL_FIRE_RL_fifo_full_canonicalize)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_fifo_full_canonicalize, 1u);
	backing.DEF_WILL_FIRE_RL_fifo_full_canonicalize = DEF_WILL_FIRE_RL_fifo_full_canonicalize;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_check_fifos_first) != DEF_WILL_FIRE_RL_m_check_fifos_first)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_check_fifos_first, 1u);
	backing.DEF_WILL_FIRE_RL_m_check_fifos_first = DEF_WILL_FIRE_RL_m_check_fifos_first;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_check_fifos_not_empty) != DEF_WILL_FIRE_RL_m_check_fifos_not_empty)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_check_fifos_not_empty, 1u);
	backing.DEF_WILL_FIRE_RL_m_check_fifos_not_empty = DEF_WILL_FIRE_RL_m_check_fifos_not_empty;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_check_fifos_not_full) != DEF_WILL_FIRE_RL_m_check_fifos_not_full)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_check_fifos_not_full, 1u);
	backing.DEF_WILL_FIRE_RL_m_check_fifos_not_full = DEF_WILL_FIRE_RL_m_check_fifos_not_full;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_check_outputs) != DEF_WILL_FIRE_RL_m_check_outputs)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_check_outputs, 1u);
	backing.DEF_WILL_FIRE_RL_m_check_outputs = DEF_WILL_FIRE_RL_m_check_outputs;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_cycle_inc) != DEF_WILL_FIRE_RL_m_cycle_inc)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_cycle_inc, 1u);
	backing.DEF_WILL_FIRE_RL_m_cycle_inc = DEF_WILL_FIRE_RL_m_cycle_inc;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_feed_inputs) != DEF_WILL_FIRE_RL_m_feed_inputs)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_feed_inputs, 1u);
	backing.DEF_WILL_FIRE_RL_m_feed_inputs = DEF_WILL_FIRE_RL_m_feed_inputs;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_init) != DEF_WILL_FIRE_RL_m_init)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_init, 1u);
	backing.DEF_WILL_FIRE_RL_m_init = DEF_WILL_FIRE_RL_m_init;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_randomA_every) != DEF_WILL_FIRE_RL_m_randomA_every)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_randomA_every, 1u);
	backing.DEF_WILL_FIRE_RL_m_randomA_every = DEF_WILL_FIRE_RL_m_randomA_every;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_randomA_every_1) != DEF_WILL_FIRE_RL_m_randomA_every_1)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_randomA_every_1, 1u);
	backing.DEF_WILL_FIRE_RL_m_randomA_every_1 = DEF_WILL_FIRE_RL_m_randomA_every_1;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_randomB_every) != DEF_WILL_FIRE_RL_m_randomB_every)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_randomB_every, 1u);
	backing.DEF_WILL_FIRE_RL_m_randomB_every = DEF_WILL_FIRE_RL_m_randomB_every;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_randomB_every_1) != DEF_WILL_FIRE_RL_m_randomB_every_1)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_randomB_every_1, 1u);
	backing.DEF_WILL_FIRE_RL_m_randomB_every_1 = DEF_WILL_FIRE_RL_m_randomB_every_1;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_randomC_every) != DEF_WILL_FIRE_RL_m_randomC_every)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_randomC_every, 1u);
	backing.DEF_WILL_FIRE_RL_m_randomC_every = DEF_WILL_FIRE_RL_m_randomC_every;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_randomC_every_1) != DEF_WILL_FIRE_RL_m_randomC_every_1)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_randomC_every_1, 1u);
	backing.DEF_WILL_FIRE_RL_m_randomC_every_1 = DEF_WILL_FIRE_RL_m_randomC_every_1;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_randomData_every) != DEF_WILL_FIRE_RL_m_randomData_every)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_randomData_every, 1u);
	backing.DEF_WILL_FIRE_RL_m_randomData_every = DEF_WILL_FIRE_RL_m_randomData_every;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_randomData_every_1) != DEF_WILL_FIRE_RL_m_randomData_every_1)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_randomData_every_1, 1u);
	backing.DEF_WILL_FIRE_RL_m_randomData_every_1 = DEF_WILL_FIRE_RL_m_randomData_every_1;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_m_stop_tb) != DEF_WILL_FIRE_RL_m_stop_tb)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_m_stop_tb, 1u);
	backing.DEF_WILL_FIRE_RL_m_stop_tb = DEF_WILL_FIRE_RL_m_stop_tb;
      }
      ++num;
      if ((backing.DEF_fifo_empty_ehrReg__h5359) != DEF_fifo_empty_ehrReg__h5359)
      {
	vcd_write_val(sim_hdl, num, DEF_fifo_empty_ehrReg__h5359, 1u);
	backing.DEF_fifo_empty_ehrReg__h5359 = DEF_fifo_empty_ehrReg__h5359;
      }
      ++num;
      if ((backing.DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71) != DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71)
      {
	vcd_write_val(sim_hdl, num, DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71, 1u);
	backing.DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71 = DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71;
      }
      ++num;
      if ((backing.DEF_fifo_empty_virtual_reg_1_read____d67) != DEF_fifo_empty_virtual_reg_1_read____d67)
      {
	vcd_write_val(sim_hdl, num, DEF_fifo_empty_virtual_reg_1_read____d67, 1u);
	backing.DEF_fifo_empty_virtual_reg_1_read____d67 = DEF_fifo_empty_virtual_reg_1_read____d67;
      }
      ++num;
      if ((backing.DEF_fifo_empty_wires_0_wget____d4) != DEF_fifo_empty_wires_0_wget____d4)
      {
	vcd_write_val(sim_hdl, num, DEF_fifo_empty_wires_0_wget____d4, 1u);
	backing.DEF_fifo_empty_wires_0_wget____d4 = DEF_fifo_empty_wires_0_wget____d4;
      }
      ++num;
      if ((backing.DEF_fifo_empty_wires_0_whas____d3) != DEF_fifo_empty_wires_0_whas____d3)
      {
	vcd_write_val(sim_hdl, num, DEF_fifo_empty_wires_0_whas____d3, 1u);
	backing.DEF_fifo_empty_wires_0_whas____d3 = DEF_fifo_empty_wires_0_whas____d3;
      }
      ++num;
      if ((backing.DEF_fifo_full_ehrReg__h1671) != DEF_fifo_full_ehrReg__h1671)
      {
	vcd_write_val(sim_hdl, num, DEF_fifo_full_ehrReg__h1671, 1u);
	backing.DEF_fifo_full_ehrReg__h1671 = DEF_fifo_full_ehrReg__h1671;
      }
      ++num;
      if ((backing.DEF_fifo_full_virtual_reg_0_read____d47) != DEF_fifo_full_virtual_reg_0_read____d47)
      {
	vcd_write_val(sim_hdl, num, DEF_fifo_full_virtual_reg_0_read____d47, 1u);
	backing.DEF_fifo_full_virtual_reg_0_read____d47 = DEF_fifo_full_virtual_reg_0_read____d47;
      }
      ++num;
      if ((backing.DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50) != DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50)
      {
	vcd_write_val(sim_hdl, num, DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50, 1u);
	backing.DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50 = DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50;
      }
      ++num;
      if ((backing.DEF_fifo_full_virtual_reg_1_read____d46) != DEF_fifo_full_virtual_reg_1_read____d46)
      {
	vcd_write_val(sim_hdl, num, DEF_fifo_full_virtual_reg_1_read____d46, 1u);
	backing.DEF_fifo_full_virtual_reg_1_read____d46 = DEF_fifo_full_virtual_reg_1_read____d46;
      }
      ++num;
      if ((backing.DEF_m_input_count_8_EQ_1024___d100) != DEF_m_input_count_8_EQ_1024___d100)
      {
	vcd_write_val(sim_hdl, num, DEF_m_input_count_8_EQ_1024___d100, 1u);
	backing.DEF_m_input_count_8_EQ_1024___d100 = DEF_m_input_count_8_EQ_1024___d100;
      }
      ++num;
      if ((backing.DEF_m_ref_fifo_rv_port1__read__5_BIT_8___d66) != DEF_m_ref_fifo_rv_port1__read__5_BIT_8___d66)
      {
	vcd_write_val(sim_hdl, num, DEF_m_ref_fifo_rv_port1__read__5_BIT_8___d66, 1u);
	backing.DEF_m_ref_fifo_rv_port1__read__5_BIT_8___d66 = DEF_m_ref_fifo_rv_port1__read__5_BIT_8___d66;
      }
      ++num;
      if ((backing.DEF_m_ref_fifo_rv_port1__read____d65) != DEF_m_ref_fifo_rv_port1__read____d65)
      {
	vcd_write_val(sim_hdl, num, DEF_m_ref_fifo_rv_port1__read____d65, 9u);
	backing.DEF_m_ref_fifo_rv_port1__read____d65 = DEF_m_ref_fifo_rv_port1__read____d65;
      }
      ++num;
      if ((backing.DEF_v__h2336) != DEF_v__h2336)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2336, 32u);
	backing.DEF_v__h2336 = DEF_v__h2336;
      }
      ++num;
      if ((backing.DEF_v__h2417) != DEF_v__h2417)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2417, 2u);
	backing.DEF_v__h2417 = DEF_v__h2417;
      }
      ++num;
      if ((backing.DEF_v__h2726) != DEF_v__h2726)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2726, 32u);
	backing.DEF_v__h2726 = DEF_v__h2726;
      }
      ++num;
      if ((backing.DEF_v__h2806) != DEF_v__h2806)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2806, 2u);
	backing.DEF_v__h2806 = DEF_v__h2806;
      }
      ++num;
      if ((backing.DEF_v__h3113) != DEF_v__h3113)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3113, 32u);
	backing.DEF_v__h3113 = DEF_v__h3113;
      }
      ++num;
      if ((backing.DEF_v__h3503) != DEF_v__h3503)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3503, 32u);
	backing.DEF_v__h3503 = DEF_v__h3503;
      }
      ++num;
      if ((backing.DEF_v__h3583) != DEF_v__h3583)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3583, 8u);
	backing.DEF_v__h3583 = DEF_v__h3583;
      }
      ++num;
      if ((backing.DEF_x__h5479) != DEF_x__h5479)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h5479, 32u);
	backing.DEF_x__h5479 = DEF_x__h5479;
      }
      ++num;
      if ((backing.DEF_x__h5741) != DEF_x__h5741)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h5741, 32u);
	backing.DEF_x__h5741 = DEF_x__h5741;
      }
      ++num;
      if ((backing.DEF_x__h5889) != DEF_x__h5889)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h5889, 32u);
	backing.DEF_x__h5889 = DEF_x__h5889;
      }
      ++num;
      if ((backing.DEF_x_first__h1978) != DEF_x_first__h1978)
      {
	vcd_write_val(sim_hdl, num, DEF_x_first__h1978, 8u);
	backing.DEF_x_first__h1978 = DEF_x_first__h1978;
      }
      ++num;
      if ((backing.DEF_x_wget__h2279) != DEF_x_wget__h2279)
      {
	vcd_write_val(sim_hdl, num, DEF_x_wget__h2279, 2u);
	backing.DEF_x_wget__h2279 = DEF_x_wget__h2279;
      }
      ++num;
      if ((backing.DEF_x_wget__h2669) != DEF_x_wget__h2669)
      {
	vcd_write_val(sim_hdl, num, DEF_x_wget__h2669, 2u);
	backing.DEF_x_wget__h2669 = DEF_x_wget__h2669;
      }
      ++num;
      if ((backing.DEF_x_wget__h3446) != DEF_x_wget__h3446)
      {
	vcd_write_val(sim_hdl, num, DEF_x_wget__h3446, 8u);
	backing.DEF_x_wget__h3446 = DEF_x_wget__h3446;
      }
      ++num;
      if ((backing.DEF_y__h5675) != DEF_y__h5675)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h5675, 8u);
	backing.DEF_y__h5675 = DEF_y__h5675;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_fifo_empty_canonicalize, 1u);
      backing.DEF_CAN_FIRE_RL_fifo_empty_canonicalize = DEF_CAN_FIRE_RL_fifo_empty_canonicalize;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_fifo_full_canonicalize, 1u);
      backing.DEF_CAN_FIRE_RL_fifo_full_canonicalize = DEF_CAN_FIRE_RL_fifo_full_canonicalize;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_check_fifos_first, 1u);
      backing.DEF_CAN_FIRE_RL_m_check_fifos_first = DEF_CAN_FIRE_RL_m_check_fifos_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_check_fifos_not_empty, 1u);
      backing.DEF_CAN_FIRE_RL_m_check_fifos_not_empty = DEF_CAN_FIRE_RL_m_check_fifos_not_empty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_check_fifos_not_full, 1u);
      backing.DEF_CAN_FIRE_RL_m_check_fifos_not_full = DEF_CAN_FIRE_RL_m_check_fifos_not_full;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_check_outputs, 1u);
      backing.DEF_CAN_FIRE_RL_m_check_outputs = DEF_CAN_FIRE_RL_m_check_outputs;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_cycle_inc, 1u);
      backing.DEF_CAN_FIRE_RL_m_cycle_inc = DEF_CAN_FIRE_RL_m_cycle_inc;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_feed_inputs, 1u);
      backing.DEF_CAN_FIRE_RL_m_feed_inputs = DEF_CAN_FIRE_RL_m_feed_inputs;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_init, 1u);
      backing.DEF_CAN_FIRE_RL_m_init = DEF_CAN_FIRE_RL_m_init;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_randomA_every, 1u);
      backing.DEF_CAN_FIRE_RL_m_randomA_every = DEF_CAN_FIRE_RL_m_randomA_every;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_randomA_every_1, 1u);
      backing.DEF_CAN_FIRE_RL_m_randomA_every_1 = DEF_CAN_FIRE_RL_m_randomA_every_1;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_randomB_every, 1u);
      backing.DEF_CAN_FIRE_RL_m_randomB_every = DEF_CAN_FIRE_RL_m_randomB_every;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_randomB_every_1, 1u);
      backing.DEF_CAN_FIRE_RL_m_randomB_every_1 = DEF_CAN_FIRE_RL_m_randomB_every_1;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_randomC_every, 1u);
      backing.DEF_CAN_FIRE_RL_m_randomC_every = DEF_CAN_FIRE_RL_m_randomC_every;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_randomC_every_1, 1u);
      backing.DEF_CAN_FIRE_RL_m_randomC_every_1 = DEF_CAN_FIRE_RL_m_randomC_every_1;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_randomData_every, 1u);
      backing.DEF_CAN_FIRE_RL_m_randomData_every = DEF_CAN_FIRE_RL_m_randomData_every;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_randomData_every_1, 1u);
      backing.DEF_CAN_FIRE_RL_m_randomData_every_1 = DEF_CAN_FIRE_RL_m_randomData_every_1;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_m_stop_tb, 1u);
      backing.DEF_CAN_FIRE_RL_m_stop_tb = DEF_CAN_FIRE_RL_m_stop_tb;
      vcd_write_val(sim_hdl, num++, DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6, 1u);
      backing.DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6 = DEF_IF_fifo_empty_wires_0_whas_THEN_fifo_empty_wir_ETC___d6;
      vcd_write_val(sim_hdl, num++, DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13, 1u);
      backing.DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13 = DEF_IF_fifo_full_wires_0_whas__0_THEN_fifo_full_wi_ETC___d13;
      vcd_write_val(sim_hdl, num++, DEF_IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45, 1u);
      backing.DEF_IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45 = DEF_IF_m_randomA_zaz_whas__9_THEN_m_randomA_zaz_wg_ETC___d45;
      vcd_write_val(sim_hdl, num++, DEF_IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64, 1u);
      backing.DEF_IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64 = DEF_IF_m_randomB_zaz_whas__6_THEN_m_randomB_zaz_wg_ETC___d64;
      vcd_write_val(sim_hdl, num++, DEF_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53, 1u);
      backing.DEF_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53 = DEF_NOT_m_ref_fifo_rv_port0__read__1_BIT_8_2___d53;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_fifo_empty_canonicalize, 1u);
      backing.DEF_WILL_FIRE_RL_fifo_empty_canonicalize = DEF_WILL_FIRE_RL_fifo_empty_canonicalize;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_fifo_full_canonicalize, 1u);
      backing.DEF_WILL_FIRE_RL_fifo_full_canonicalize = DEF_WILL_FIRE_RL_fifo_full_canonicalize;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_check_fifos_first, 1u);
      backing.DEF_WILL_FIRE_RL_m_check_fifos_first = DEF_WILL_FIRE_RL_m_check_fifos_first;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_check_fifos_not_empty, 1u);
      backing.DEF_WILL_FIRE_RL_m_check_fifos_not_empty = DEF_WILL_FIRE_RL_m_check_fifos_not_empty;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_check_fifos_not_full, 1u);
      backing.DEF_WILL_FIRE_RL_m_check_fifos_not_full = DEF_WILL_FIRE_RL_m_check_fifos_not_full;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_check_outputs, 1u);
      backing.DEF_WILL_FIRE_RL_m_check_outputs = DEF_WILL_FIRE_RL_m_check_outputs;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_cycle_inc, 1u);
      backing.DEF_WILL_FIRE_RL_m_cycle_inc = DEF_WILL_FIRE_RL_m_cycle_inc;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_feed_inputs, 1u);
      backing.DEF_WILL_FIRE_RL_m_feed_inputs = DEF_WILL_FIRE_RL_m_feed_inputs;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_init, 1u);
      backing.DEF_WILL_FIRE_RL_m_init = DEF_WILL_FIRE_RL_m_init;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_randomA_every, 1u);
      backing.DEF_WILL_FIRE_RL_m_randomA_every = DEF_WILL_FIRE_RL_m_randomA_every;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_randomA_every_1, 1u);
      backing.DEF_WILL_FIRE_RL_m_randomA_every_1 = DEF_WILL_FIRE_RL_m_randomA_every_1;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_randomB_every, 1u);
      backing.DEF_WILL_FIRE_RL_m_randomB_every = DEF_WILL_FIRE_RL_m_randomB_every;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_randomB_every_1, 1u);
      backing.DEF_WILL_FIRE_RL_m_randomB_every_1 = DEF_WILL_FIRE_RL_m_randomB_every_1;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_randomC_every, 1u);
      backing.DEF_WILL_FIRE_RL_m_randomC_every = DEF_WILL_FIRE_RL_m_randomC_every;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_randomC_every_1, 1u);
      backing.DEF_WILL_FIRE_RL_m_randomC_every_1 = DEF_WILL_FIRE_RL_m_randomC_every_1;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_randomData_every, 1u);
      backing.DEF_WILL_FIRE_RL_m_randomData_every = DEF_WILL_FIRE_RL_m_randomData_every;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_randomData_every_1, 1u);
      backing.DEF_WILL_FIRE_RL_m_randomData_every_1 = DEF_WILL_FIRE_RL_m_randomData_every_1;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_m_stop_tb, 1u);
      backing.DEF_WILL_FIRE_RL_m_stop_tb = DEF_WILL_FIRE_RL_m_stop_tb;
      vcd_write_val(sim_hdl, num++, DEF_fifo_empty_ehrReg__h5359, 1u);
      backing.DEF_fifo_empty_ehrReg__h5359 = DEF_fifo_empty_ehrReg__h5359;
      vcd_write_val(sim_hdl, num++, DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71, 1u);
      backing.DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71 = DEF_fifo_empty_virtual_reg_1_read__7_OR_IF_fifo_em_ETC___d71;
      vcd_write_val(sim_hdl, num++, DEF_fifo_empty_virtual_reg_1_read____d67, 1u);
      backing.DEF_fifo_empty_virtual_reg_1_read____d67 = DEF_fifo_empty_virtual_reg_1_read____d67;
      vcd_write_val(sim_hdl, num++, DEF_fifo_empty_wires_0_wget____d4, 1u);
      backing.DEF_fifo_empty_wires_0_wget____d4 = DEF_fifo_empty_wires_0_wget____d4;
      vcd_write_val(sim_hdl, num++, DEF_fifo_empty_wires_0_whas____d3, 1u);
      backing.DEF_fifo_empty_wires_0_whas____d3 = DEF_fifo_empty_wires_0_whas____d3;
      vcd_write_val(sim_hdl, num++, DEF_fifo_full_ehrReg__h1671, 1u);
      backing.DEF_fifo_full_ehrReg__h1671 = DEF_fifo_full_ehrReg__h1671;
      vcd_write_val(sim_hdl, num++, DEF_fifo_full_virtual_reg_0_read____d47, 1u);
      backing.DEF_fifo_full_virtual_reg_0_read____d47 = DEF_fifo_full_virtual_reg_0_read____d47;
      vcd_write_val(sim_hdl, num++, DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50, 1u);
      backing.DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50 = DEF_fifo_full_virtual_reg_1_read__6_OR_fifo_full_v_ETC___d50;
      vcd_write_val(sim_hdl, num++, DEF_fifo_full_virtual_reg_1_read____d46, 1u);
      backing.DEF_fifo_full_virtual_reg_1_read____d46 = DEF_fifo_full_virtual_reg_1_read____d46;
      vcd_write_val(sim_hdl, num++, DEF_m_input_count_8_EQ_1024___d100, 1u);
      backing.DEF_m_input_count_8_EQ_1024___d100 = DEF_m_input_count_8_EQ_1024___d100;
      vcd_write_val(sim_hdl, num++, DEF_m_ref_fifo_rv_port1__read__5_BIT_8___d66, 1u);
      backing.DEF_m_ref_fifo_rv_port1__read__5_BIT_8___d66 = DEF_m_ref_fifo_rv_port1__read__5_BIT_8___d66;
      vcd_write_val(sim_hdl, num++, DEF_m_ref_fifo_rv_port1__read____d65, 9u);
      backing.DEF_m_ref_fifo_rv_port1__read____d65 = DEF_m_ref_fifo_rv_port1__read____d65;
      vcd_write_val(sim_hdl, num++, DEF_v__h2336, 32u);
      backing.DEF_v__h2336 = DEF_v__h2336;
      vcd_write_val(sim_hdl, num++, DEF_v__h2417, 2u);
      backing.DEF_v__h2417 = DEF_v__h2417;
      vcd_write_val(sim_hdl, num++, DEF_v__h2726, 32u);
      backing.DEF_v__h2726 = DEF_v__h2726;
      vcd_write_val(sim_hdl, num++, DEF_v__h2806, 2u);
      backing.DEF_v__h2806 = DEF_v__h2806;
      vcd_write_val(sim_hdl, num++, DEF_v__h3113, 32u);
      backing.DEF_v__h3113 = DEF_v__h3113;
      vcd_write_val(sim_hdl, num++, DEF_v__h3503, 32u);
      backing.DEF_v__h3503 = DEF_v__h3503;
      vcd_write_val(sim_hdl, num++, DEF_v__h3583, 8u);
      backing.DEF_v__h3583 = DEF_v__h3583;
      vcd_write_val(sim_hdl, num++, DEF_x__h5479, 32u);
      backing.DEF_x__h5479 = DEF_x__h5479;
      vcd_write_val(sim_hdl, num++, DEF_x__h5741, 32u);
      backing.DEF_x__h5741 = DEF_x__h5741;
      vcd_write_val(sim_hdl, num++, DEF_x__h5889, 32u);
      backing.DEF_x__h5889 = DEF_x__h5889;
      vcd_write_val(sim_hdl, num++, DEF_x_first__h1978, 8u);
      backing.DEF_x_first__h1978 = DEF_x_first__h1978;
      vcd_write_val(sim_hdl, num++, DEF_x_wget__h2279, 2u);
      backing.DEF_x_wget__h2279 = DEF_x_wget__h2279;
      vcd_write_val(sim_hdl, num++, DEF_x_wget__h2669, 2u);
      backing.DEF_x_wget__h2669 = DEF_x_wget__h2669;
      vcd_write_val(sim_hdl, num++, DEF_x_wget__h3446, 8u);
      backing.DEF_x_wget__h3446 = DEF_x_wget__h3446;
      vcd_write_val(sim_hdl, num++, DEF_y__h5675, 8u);
      backing.DEF_y__h5675 = DEF_y__h5675;
    }
}

void MOD_mkTbBypassFunctional::vcd_prims(tVCDDumpType dt, MOD_mkTbBypassFunctional &backing)
{
  INST_fifo_data.dump_VCD(dt, backing.INST_fifo_data);
  INST_fifo_empty_ehrReg.dump_VCD(dt, backing.INST_fifo_empty_ehrReg);
  INST_fifo_empty_ignored_wires_0.dump_VCD(dt, backing.INST_fifo_empty_ignored_wires_0);
  INST_fifo_empty_ignored_wires_1.dump_VCD(dt, backing.INST_fifo_empty_ignored_wires_1);
  INST_fifo_empty_virtual_reg_0.dump_VCD(dt, backing.INST_fifo_empty_virtual_reg_0);
  INST_fifo_empty_virtual_reg_1.dump_VCD(dt, backing.INST_fifo_empty_virtual_reg_1);
  INST_fifo_empty_wires_0.dump_VCD(dt, backing.INST_fifo_empty_wires_0);
  INST_fifo_empty_wires_1.dump_VCD(dt, backing.INST_fifo_empty_wires_1);
  INST_fifo_full_ehrReg.dump_VCD(dt, backing.INST_fifo_full_ehrReg);
  INST_fifo_full_ignored_wires_0.dump_VCD(dt, backing.INST_fifo_full_ignored_wires_0);
  INST_fifo_full_ignored_wires_1.dump_VCD(dt, backing.INST_fifo_full_ignored_wires_1);
  INST_fifo_full_virtual_reg_0.dump_VCD(dt, backing.INST_fifo_full_virtual_reg_0);
  INST_fifo_full_virtual_reg_1.dump_VCD(dt, backing.INST_fifo_full_virtual_reg_1);
  INST_fifo_full_wires_0.dump_VCD(dt, backing.INST_fifo_full_wires_0);
  INST_fifo_full_wires_1.dump_VCD(dt, backing.INST_fifo_full_wires_1);
  INST_m_cycle.dump_VCD(dt, backing.INST_m_cycle);
  INST_m_input_count.dump_VCD(dt, backing.INST_m_input_count);
  INST_m_output_count.dump_VCD(dt, backing.INST_m_output_count);
  INST_m_randomA_ignore.dump_VCD(dt, backing.INST_m_randomA_ignore);
  INST_m_randomA_initialized.dump_VCD(dt, backing.INST_m_randomA_initialized);
  INST_m_randomA_zaz.dump_VCD(dt, backing.INST_m_randomA_zaz);
  INST_m_randomB_ignore.dump_VCD(dt, backing.INST_m_randomB_ignore);
  INST_m_randomB_initialized.dump_VCD(dt, backing.INST_m_randomB_initialized);
  INST_m_randomB_zaz.dump_VCD(dt, backing.INST_m_randomB_zaz);
  INST_m_randomC_ignore.dump_VCD(dt, backing.INST_m_randomC_ignore);
  INST_m_randomC_initialized.dump_VCD(dt, backing.INST_m_randomC_initialized);
  INST_m_randomC_zaz.dump_VCD(dt, backing.INST_m_randomC_zaz);
  INST_m_randomData_ignore.dump_VCD(dt, backing.INST_m_randomData_ignore);
  INST_m_randomData_initialized.dump_VCD(dt, backing.INST_m_randomData_initialized);
  INST_m_randomData_zaz.dump_VCD(dt, backing.INST_m_randomData_zaz);
  INST_m_ref_fifo_rv.dump_VCD(dt, backing.INST_m_ref_fifo_rv);
}
